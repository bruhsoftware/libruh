/**
 * Sample React Native App
 * https://github.com/facebook/react-native
 *
 * @format
 */

import React from 'react';
import { NavigationContainer } from '@react-navigation/native';

import { createNativeStackNavigator } from '@react-navigation/native-stack';
import { Button, StatusBar, Text, View, useColorScheme } from 'react-native';
import type {StatusBarStyle} from 'react-native';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import { DefaultTheme, DarkTheme } from '@react-navigation/native';
import storage from './components/storage';


import Ionicons from '@expo/vector-icons/Ionicons';
import Main from './components/ui/Main';
import LoginMain from './components/login/Login';

// @ts-ignore
function HomeScreen({ navigation }) {
  return (
    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>
      <Text>Home Screen</Text>
      <Button
        title="Go to Details"
        onPress={() => navigation.navigate('Details')}
      />
    </View>
  );
}

// @ts-ignore
function DetailsScreen({ navigation }) {
  return (
    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>
      <Text>Details Screen</Text>
      <Button title="Go to Home" onPress={() => navigation.navigate('Home')} />
    </View>
  );
}

const Tab = createBottomTabNavigator();
const LoginStack = createNativeStackNavigator();

function App() {
  const scheme = useColorScheme();
  storage.load({
    key: 'loginCredentials',
  })
  .then(data => {
    // data exists
    return (
      <NavigationContainer theme={scheme === 'dark' ? DarkTheme : DefaultTheme}>
        <p>a</p>
        <Main/>
      </NavigationContainer>
    );
  })
  .catch(err => {
    // data not found or sum other error
    return (
      <NavigationContainer theme={scheme === 'dark' ? DarkTheme : DefaultTheme}>
        <p>b</p>
        <StatusBar
            animated={true}
            backgroundColor="#61dafb"
            barStyle={scheme === 'dark' ? "light-content" : "dark-content"}
        />
        <LoginStack.Navigator initialRouteName="home" >
            <LoginStack.Screen name="home" component={LoginPage} options={{}}/>
            {/*<Stack.Screen name="Details" component={DetailsScreen}  options={{}}/>*/}
        </LoginStack.Navigator>
      </NavigationContainer>
    );
  });
}

export default App;